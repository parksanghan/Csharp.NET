//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _1115_이미지_1_.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAzure", CallbackContract=typeof(_1115_이미지_1_.ServiceReference1.IAzureCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IAzure {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAzure/AzureServiceLoad")]
        void AzureServiceLoad();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAzure/AzureServiceLoad")]
        System.Threading.Tasks.Task AzureServiceLoadAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IAzure/Analyze")]
        void Analyze(string filename, byte[] imagebuffer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IAzure/Analyze")]
        System.Threading.Tasks.Task AnalyzeAsync(string filename, byte[] imagebuffer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IAzure/ExtractText")]
        void ExtractText(string filename, byte[] imagerbuffer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IAzure/ExtractText")]
        System.Threading.Tasks.Task ExtractTextAsync(string filename, byte[] imagerbuffer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IAzure/GetListSql")]
        void GetListSql();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IAzure/GetListSql")]
        System.Threading.Tasks.Task GetListSqlAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IAzure/GetSelectItem")]
        void GetSelectItem(string shorturl);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IAzure/GetSelectItem")]
        System.Threading.Tasks.Task GetSelectItemAsync(string shorturl);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IAzure/AzureServiceClose")]
        void AzureServiceClose();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IAzure/AzureServiceClose")]
        System.Threading.Tasks.Task AzureServiceCloseAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAzureCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAzure/AzureServiceLoadACK")]
        void AzureServiceLoadACK(bool reusult);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAzure/AnalyzeACK")]
        void AnalyzeACK(string analystrig);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAzure/ExtractTextACK")]
        void ExtractTextACK(string analystrig);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAzure/GetListSqlACK")]
        void GetListSqlACK(string packet);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAzure/GetSelectItemACK")]
        void GetSelectItemACK(string packet);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAzure/AzureServiceCloseACK")]
        void AzureServiceCloseACK(bool reuslt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAzureChannel : _1115_이미지_1_.ServiceReference1.IAzure, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AzureClient : System.ServiceModel.DuplexClientBase<_1115_이미지_1_.ServiceReference1.IAzure>, _1115_이미지_1_.ServiceReference1.IAzure {
        
        public AzureClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AzureClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AzureClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AzureClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AzureClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AzureServiceLoad() {
            base.Channel.AzureServiceLoad();
        }
        
        public System.Threading.Tasks.Task AzureServiceLoadAsync() {
            return base.Channel.AzureServiceLoadAsync();
        }
        
        public void Analyze(string filename, byte[] imagebuffer) {
            base.Channel.Analyze(filename, imagebuffer);
        }
        
        public System.Threading.Tasks.Task AnalyzeAsync(string filename, byte[] imagebuffer) {
            return base.Channel.AnalyzeAsync(filename, imagebuffer);
        }
        
        public void ExtractText(string filename, byte[] imagerbuffer) {
            base.Channel.ExtractText(filename, imagerbuffer);
        }
        
        public System.Threading.Tasks.Task ExtractTextAsync(string filename, byte[] imagerbuffer) {
            return base.Channel.ExtractTextAsync(filename, imagerbuffer);
        }
        
        public void GetListSql() {
            base.Channel.GetListSql();
        }
        
        public System.Threading.Tasks.Task GetListSqlAsync() {
            return base.Channel.GetListSqlAsync();
        }
        
        public void GetSelectItem(string shorturl) {
            base.Channel.GetSelectItem(shorturl);
        }
        
        public System.Threading.Tasks.Task GetSelectItemAsync(string shorturl) {
            return base.Channel.GetSelectItemAsync(shorturl);
        }
        
        public void AzureServiceClose() {
            base.Channel.AzureServiceClose();
        }
        
        public System.Threading.Tasks.Task AzureServiceCloseAsync() {
            return base.Channel.AzureServiceCloseAsync();
        }
    }
}
