    /// <summary>
    /// Client 사용법
    /// 1. Callback함수 구현(2개)
    /// 2. Client객체 생성시 전달(serverip, serverPort, Callback함수 2개)         
    /// 3. Client 실행 / 종료
    ///    Start() / Stop()
    /// 4. 전송처리
    ///    SendData()
    /// 5. 수신처리
    ///    1번에서 등록한 Callback함수에서 처리    
    /// </summary>
    internal class Program
    {
        private Client client = null;

        #region Callback
        public void RecvDel(Socket s, string msg)
        {
            //Console.WriteLine("[데이터 수신] " + msg);
            //msg : pack_shortmessage\a이름#메시지
            string[] sp = msg.Split('\a');
            if (sp[0] == "pack_shortmessage")
                Short_Message(sp[1]);
        }

        public void LogDel(Socket s, Log log, string msg)
        {
            string temp = string.Format(log.ToString() + "\t" + msg);
            Console.WriteLine(temp);
        }
        #endregion

        #region 수신처리
        //msg : 이름#메시지
        public void Short_Message(string msg)
        {
            string[] sp = msg.Split('#');
            string name = sp[0];
            string message = sp[1];

            Console.WriteLine("[{0}] {1}", name, message);
        }
        #endregion 

        public void Run()
        {
            client = new Client("220.90.179.75", 7000, RecvDel, LogDel);
            if (client.Start() == false)
                return;

            while (true)
            {
                string name = "최창민";
                string msg = Console.ReadLine();
                if (msg == string.Empty)
                    break;

                //패킷 생성
                string packet = Packet.ShortMessage(name, msg);

                //send
                bool b = client.SendData(packet);
            }

            client.Stop();
        }

        public void RecvData(string msg)
        {
            Console.WriteLine("서버로 부터 온 데이터 : " + msg);
        }

        static void Main(string[] args)
        {
            new Program().Run();
        }
    }
}